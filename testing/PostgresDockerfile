FROM --platform=linux/amd64 ubuntu:20.04

# install python, libmysqlclient-dev, java, bats, git ruby, perl, cpan
ENV DEBIAN_FRONTEND=noninteractive
RUN apt update -y && \
    apt install -y \
        curl \
        gnupg \
        software-properties-common && \
    curl -sL https://deb.nodesource.com/setup_14.x | bash - && \
    add-apt-repository ppa:deadsnakes/ppa -y && \
    sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list' && \
    curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | gpg --dearmor -o /etc/apt/trusted.gpg.d/postgresql.gpg
RUN apt update -y && \
    apt install -y \
        python3.8 \
        python3-pip \
        curl \
        wget \
        pkg-config \
        openjdk-17-jdk \
        ca-certificates-java \
        bats \
        perl \
        php \
        cpanminus \
        cmake \
        g++ \
        libmysqlcppconn-dev \
        git \
        ruby \
        ruby-dev \
        gem \
        r-base \
        postgresql-16 \
        postgresql-contrib-16 \
        nodejs \
        lsof \
        postgresql-server-dev-all && \
        update-ca-certificates -f

# install go
WORKDIR /root
ENV GO_VERSION=1.22.1
ENV GOPATH=$HOME/go
ENV PATH=$PATH:$GOPATH/bin
ENV PATH=$PATH:$GOPATH/bin:/usr/local/go/bin
RUN curl -O "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz" && \
    sha256sum "go${GO_VERSION}.linux-amd64.tar.gz" && \
    tar -xvf "go${GO_VERSION}.linux-amd64.tar.gz" -C /usr/local && \
    chown -R root:root /usr/local/go && \
    mkdir -p $HOME/go/{bin,src} && \
    go version

# Setup JAVA_HOME -- useful for docker commandline
ENV JAVA_HOME /usr/lib/jvm/java-17-openjdk-amd64/

# install java postgres JDBC driver
RUN mkdir -p /postgres-client-tests/java
RUN curl -L -o /postgres-client-tests/java/postgresql-42.7.3.jar \
  https://jdbc.postgresql.org/download/postgresql-42.7.3.jar

# install node deps
COPY ./testing/postgres-client-tests/node/package.json /postgres-client-tests/node/
COPY ./testing/postgres-client-tests/node/package-lock.json /postgres-client-tests/node/
WORKDIR /postgres-client-tests/node
RUN npm install

# install postgres and psql
RUN service postgresql start

# install doltgres from source
WORKDIR /root/building
COPY ./ ./doltgresql

# Build the parser
WORKDIR /root/building/doltgresql/postgres/parser
RUN bash ./build.sh

# Build the doltgres binary, which we will need for bats, and put it on PATH
WORKDIR /root/building/doltgresql/cmd/doltgres
RUN go build -o /usr/local/bin/doltgres .

COPY ./testing/postgres-client-tests /postgres-client-tests
COPY ./testing/postgres-client-tests/postgres-client-tests-entrypoint.sh /postgres-client-tests/entrypoint.sh

WORKDIR /postgres-client-tests
ENTRYPOINT ["/postgres-client-tests/entrypoint.sh"]
